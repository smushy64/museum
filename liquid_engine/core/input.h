#if !defined(INPUT_HPP)
#define INPUT_HPP
/**
 * Description:  Input Codes
 * Author:       Alicia Amarilla (smushyaa@gmail.com)
 * File Created: May 01, 2023
*/
#include "defines.h"

/// Key Codes
enum KeyCode : u16 {
    KEYCODE_UNKNOWN = U16::MAX,
    KEYCODE_SPACE = 0,
    KEYCODE_A,
    KEYCODE_B,
    KEYCODE_C,
    KEYCODE_D,
    KEYCODE_E,
    KEYCODE_F,
    KEYCODE_G,
    KEYCODE_H,
    KEYCODE_I,
    KEYCODE_J,
    KEYCODE_K,
    KEYCODE_L,
    KEYCODE_M,
    KEYCODE_N,
    KEYCODE_O,
    KEYCODE_P,
    KEYCODE_Q,
    KEYCODE_R,
    KEYCODE_S,
    KEYCODE_T,
    KEYCODE_U,
    KEYCODE_V,
    KEYCODE_W,
    KEYCODE_X,
    KEYCODE_Y,
    KEYCODE_Z,
    KEYCODE_ESCAPE,
    KEYCODE_F1,
    KEYCODE_F2,
    KEYCODE_F3,
    KEYCODE_F4,
    KEYCODE_F5,
    KEYCODE_F6,
    KEYCODE_F7,
    KEYCODE_F8,
    KEYCODE_F9,
    KEYCODE_F10,
    KEYCODE_F11,
    KEYCODE_F12,
    KEYCODE_F13,
    KEYCODE_F14,
    KEYCODE_F15,
    KEYCODE_F16,
    KEYCODE_F17,
    KEYCODE_F18,
    KEYCODE_F19,
    KEYCODE_F20,
    KEYCODE_F21,
    KEYCODE_F22,
    KEYCODE_F23,
    KEYCODE_F24,
    KEYCODE_PRINT_SCREEN,
    KEYCODE_SCROLL_LOCK,
    KEYCODE_PAUSE,
    KEYCODE_BACKTICK,
    KEYCODE_0,
    KEYCODE_1,
    KEYCODE_2,
    KEYCODE_3,
    KEYCODE_4,
    KEYCODE_5,
    KEYCODE_6,
    KEYCODE_7,
    KEYCODE_8,
    KEYCODE_9,
    KEYCODE_MINUS,
    KEYCODE_EQUALS,
    KEYCODE_BACKSPACE,
    KEYCODE_INSERT,
    KEYCODE_HOME,
    KEYCODE_PAGE_UP,
    KEYCODE_TAB,
    KEYCODE_BRACKET_LEFT,
    KEYCODE_BRACKET_RIGHT,
    KEYCODE_SLASH_BACKWARD,
    KEYCODE_DELETE,
    KEYCODE_END,
    KEYCODE_PAGE_DOWN,
    KEYCODE_CAPSLOCK,
    KEYCODE_SEMICOLON,
    KEYCODE_QUOTE,
    KEYCODE_ENTER,
    KEYCODE_SHIFT_LEFT,
    KEYCODE_COMMA,
    KEYCODE_PERIOD,
    KEYCODE_SLASH_FORWARD,
    KEYCODE_SHIFT_RIGHT,
    KEYCODE_CONTROL_LEFT,
    KEYCODE_SUPER_LEFT,
    KEYCODE_ALT_LEFT,
    KEYCODE_ALT_RIGHT,
    KEYCODE_SUPER_RIGHT,
    KEYCODE_CONTROL_RIGHT,
    KEYCODE_ARROW_LEFT,
    KEYCODE_ARROW_RIGHT,
    KEYCODE_ARROW_UP,
    KEYCODE_ARROW_DOWN,
    KEYCODE_NUM_LOCK,
    KEYCODE_PAD_0,
    KEYCODE_PAD_1,
    KEYCODE_PAD_2,
    KEYCODE_PAD_3,
    KEYCODE_PAD_4,
    KEYCODE_PAD_5,
    KEYCODE_PAD_6,
    KEYCODE_PAD_7,
    KEYCODE_PAD_8,
    KEYCODE_PAD_9,

    KEYCODE_COUNT
};
inline const char* to_string( KeyCode keycode ) {
    static const char* strings[KEYCODE_COUNT] = {
        "Space",
        "A",
        "B",
        "C",
        "D",
        "E",
        "F",
        "G",
        "H",
        "I",
        "J",
        "K",
        "L",
        "M",
        "N",
        "O",
        "P",
        "Q",
        "R",
        "S",
        "T",
        "U",
        "V",
        "W",
        "X",
        "Y",
        "Z",
        "Escape",
        "F1",
        "F2",
        "F3",
        "F4",
        "F5",
        "F6",
        "F7",
        "F8",
        "F9",
        "F10",
        "F11",
        "F12",
        "F13",
        "F14",
        "F15",
        "F16",
        "F17",
        "F18",
        "F19",
        "F20",
        "F21",
        "F22",
        "F23",
        "F24",
        "Print Screen",
        "Scroll Lock",
        "Pause",
        "`~",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "-_",
        "=+",
        "Backspace",
        "Insert",
        "Home",
        "PageUp",
        "Tab",
        "[{",
        "]}",
        "\\|",
        "Delete",
        "End",
        "Page Down",
        "Capslock",
        ";:",
        "\'\"",
        "Enter",
        "Left Shift",
        ",<",
        ".>",
        "/?",
        "Right Shift",
        "Left Control",
        "Left Super",
        "Left Alt",
        "Right Alt",
        "Right Super",
        "Right Control",
        "Left Arrow",
        "Right Arrow",
        "Up Arrow",
        "Down Arrow",
        "Numlock",
        "Keypad 0",
        "Keypad 1",
        "Keypad 2",
        "Keypad 3",
        "Keypad 4",
        "Keypad 5",
        "Keypad 6",
        "Keypad 7",
        "Keypad 8",
        "Keypad 9",
    };
    if( keycode >= KEYCODE_COUNT ) {
        return "Unknown";
    }
    return strings[keycode];
}

/// Mouse Button Codes
enum MouseCode : u16 {
    MOUSECODE_UNKNOWN = U16::MAX,
    MOUSECODE_BUTTON_LEFT = 0,
    MOUSECODE_BUTTON_MIDDLE,
    MOUSECODE_BUTTON_RIGHT,
    MOUSECODE_BUTTON_EXTRA_1,
    MOUSECODE_BUTTON_EXTRA_2,

    MOUSECODE_COUNT
};
inline const char* to_string( MouseCode mousecode ) {
    static const char* strings[MOUSECODE_COUNT] = {
        "Mouse Button Left",
        "Mouse Button Middle",
        "Mouse Button Right",
        "Mouse Button Extra 1",
        "Mouse Button Extra 2",
    };
    if( mousecode >= MOUSECODE_COUNT ) {
        return "Unknown";
    }
    return strings[mousecode];
}

#endif